/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV     1
#define NUMBER  2


/ {
        behaviors {
          hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
          };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ____ |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ____ |
// | ____ |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ____ |
// | ____ |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ____ |
//                    | ESC | SPC | TAB |   | ENT | BSPC | DEL |
                        bindings = <
   &none &kp Q       &kp W      &kp E      &kp R        &kp T   &kp Y &kp U        &kp I      &kp O      &kp P          &none
   &none &hm LCTRL A &hm LALT S &hm LGUI D &hm LSHIFT F &kp G   &kp H &hm RSHIFT J &hm RGUI K &hm LALT L &hm RCTRL SEMI &none
   &none &kp Z       &kp X      &kp C      &kp V        &kp B   &kp N &kp M        &kp COMMA  &kp DOT    &kp FSLH       &none
             &kp ESC &lt NUMBER SPACE &kp TAB              &kp RET &lt NAV BSPC &kp DEL
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// | ___ | ___ | ___ |  ↑  | ___ | ___ |   | ___ | ___ | ___ | ___ | ___ | ___ |
// | ___ | ___ |  ←  |  ↓  |  →  | ___ |   | ___ | SFT | CMD | ALT | CTL | ___ |
// | ___ | ___ | ___ | ___ | ___ | ___ |   | ___ | ___ | ___ | ___ | ___ | ___ |
//                   | ___ | ___ | ___ |   | ___ | ___ | ___ |
                        bindings = <
   &none &none &none     &kp UP   &none    &none      &none     &none     &none    &none    &none     &none
   &none &none &kp RIGHT &kp DOWN &kp LEFT &none      &none     &kp RSHFT &kp RCMD &kp LALT &kp RCTRL &none
   &none &none &none     &none    &none    &none      &none     &none     &none    &none    &none     &none
                         &none    &none    &none      &none     &none     &none
                        >;
                };

                number_layer {
// -----------------------------------------------------------------------------------------
// | ___ | ___ | ___ | ___ | ___ | ___ |   | ___ |  7  |  8  |  9  |  `  | ___ |
// | ___ | CTL | ALT | CMD | SFT | ___ |   | ___ |  4  |  5  |  6  |  =  | ___ |
// | ___ | ___ | ___ | ___ | ___ | ___ |   | ___ |  1  |  2  |  3  |  \  | ___ |
//                   | ___ | ___ | ___ |   |  -  |  ;  |  0  |
                        bindings = <
   &none &none     &none    &none    &none     &none      &none     &kp N7   &kp N8  &kp N9 &kp GRAVE &none
   &none &kp LCTRL &kp LALT &kp LCMD &kp LSHFT &none      &none     &kp N4   &kp N5  &kp N6 &kp EQUAL &none
   &none &none     &none    &none    &none     &none      &none     &kp N1   &kp N2  &kp N3 &kp BSLH  &none
                            &none    &none     &none      &kp MINUS &kp SEMI &kp N0
                        >;
                };
        };
};
